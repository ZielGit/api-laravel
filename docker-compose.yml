services:
  server:
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    container_name: api_laravel_server
    ports:
      - 8080:80
    volumes:
      - .:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - mysql
    networks:
      - laravel_network

  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    container_name: api_laravel_php
    volumes:
      - .:/var/www/html:delegated
    networks:
      - laravel_network

  mysql:
    image: mysql:8.0
    container_name: api_laravel_mysql
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel_network

  composer:
    build:
      context: .
      dockerfile: dockerfiles/composer.dockerfile
    volumes:
      - .:/var/www/html
    depends_on:
      - php
    networks:
      - laravel_network

  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - .:/var/www/html
    entrypoint: [ "php", "/var/www/html/artisan" ]
    networks:
      - laravel_network

volumes:
  mysql_data:
    driver: local

networks:
  laravel_network:
    driver: bridge
